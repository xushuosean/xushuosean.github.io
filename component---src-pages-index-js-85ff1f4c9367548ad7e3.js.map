{"version":3,"file":"component---src-pages-index-js-85ff1f4c9367548ad7e3.js","mappings":"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","sources":["webpack://taniarascia.com/./src/components/Heading.js","webpack://taniarascia.com/./src/assets/floppylogo.png","webpack://taniarascia.com/./src/pages/index.js","webpack://taniarascia.com/./src/components/PageLayout.js","webpack://taniarascia.com/./src/data/projectsList.js","webpack://taniarascia.com/./src/components/Post.js","webpack://taniarascia.com/./src/components/Posts.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Heading = ({ title, buttonText, description, slug, ...props }) => {\n  return (\n    <header className=\"heading\">\n      <div>\n        <h2>{title}</h2>\n        {description && <div className=\"description\">{description}</div>}\n      </div>\n      {slug && (\n        <Link className=\"button\" to={slug}>\n          {buttonText}\n        </Link>\n      )}\n    </header>\n  )\n}\n","export default __webpack_public_path__ + \"static/floppylogo-0c07fbe46fbceda7efdfb169dd4ef14a.png\";","import React, { useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport { Layout } from '../components/Layout'\nimport { Posts } from '../components/Posts'\nimport { SEO } from '../components/SEO'\nimport { Heading } from '../components/Heading'\nimport { Hero } from '../components/Hero'\nimport { PageLayout } from '../components/PageLayout'\nimport { projectsList } from '../data/projectsList'\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\nimport floppy from '../assets/floppylogo.png'\n\nexport default function Index({ data }) {\n  const latestNotes = data.latestNotes.edges\n  const latestArticles = data.latestArticles.edges\n  const highlights = data.highlights.edges\n  const notes = useMemo(() => getSimplifiedPosts(latestNotes), [latestNotes])\n\n  const articles = useMemo(\n    () => getSimplifiedPosts(latestArticles),\n    [latestArticles]\n  )\n  const simplifiedHighlights = useMemo(\n    () => getSimplifiedPosts(highlights, { thumbnails: true }),\n    [highlights]\n  )\n\n  return (\n    <>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <PageLayout>\n        <Hero title=\"Hey, I'm Tania!\" type=\"index\">\n          <div className=\"hero-wrapper\">\n            <div>\n              <p className=\"hero-description\">\n                I'm a software engineer, open-source creator, and former\n                professional chef. I've been making websites since 1998 and\n                writing on this blog for the past decade.\n              </p>\n              <p className=\"hero-description\">\n                I enjoy weight-lifting, reading sci-fi and fantasy, playing\n                retro video games, and spending time with my partner and\n                friends.\n              </p>\n\n              <p className=\"hero-description\">\n                On this site, you can check out all the{' '}\n                <Link to=\"/blog\">articles</Link> I've written, read some of my{' '}\n                <Link to=\"/notes\">notes</Link>, or learn more{' '}\n                <Link to=\"/me\">about me</Link>{' '}\n                <img\n                  src={floppy}\n                  className=\"floppy-logo\"\n                  alt=\"Floppy diskette\"\n                />\n                .\n              </p>\n            </div>\n            <img src=\"/ram.png\" className=\"hero-image\" alt=\"RAM Ram\" />\n          </div>\n        </Hero>\n\n        <section className=\"section-index\">\n          <Heading\n            title=\"Articles\"\n            description=\"Guides, references, and tutorials.\"\n          />\n          <Posts data={articles} newspaper />\n        </section>\n\n        <section className=\"section-index\">\n          <Heading\n            title=\"Notes\"\n            description=\"Personal notes about life, music, projects, and everything else.\"\n          />\n          <Posts data={notes} newspaper />\n        </section>\n\n        <section className=\"section-index\">\n          <Heading\n            title=\"In-depth\"\n            description=\"Long-form tutorials on a variety of development topics.\"\n          />\n          <div className=\"cards\">\n            {simplifiedHighlights.map((post) => {\n              return (\n                <Link\n                  to={post.slug}\n                  className=\"card card-highlight\"\n                  key={`popular-${post.slug}`}\n                >\n                  {post.thumbnail && <Img fixed={post.thumbnail} />}\n                  <div>{post.title}</div>\n                </Link>\n              )\n            })}\n          </div>\n        </section>\n\n        <section>\n          <Heading\n            title=\"Projects\"\n            slug=\"/projects\"\n            buttonText=\"All Projects\"\n            description=\"Open-source projects I've worked on over the years.\"\n          />\n\n          <div className=\"cards\">\n            {projectsList\n              .filter((project) => project.highlight)\n              .map((project) => {\n                return (\n                  <div className=\"card\" key={`hightlight-${project.slug}`}>\n                    <time>{project.date}</time>\n                    <a\n                      href={`https://github.com/taniarascia/${project.slug}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {project.name}\n                    </a>\n                    <p>{project.tagline}</p>\n                    <div className=\"card-links\">\n                      {project.writeup && (\n                        <Link className=\"button small\" to={project.writeup}>\n                          Article\n                        </Link>\n                      )}\n                      <a\n                        className=\"button small\"\n                        href={project.url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Demo\n                      </a>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </section>\n      </PageLayout>\n    </>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latestNotes: allMarkdownRemark(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          template: { eq: \"post\" }\n          categories: { eq: \"Personal\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    latestArticles: allMarkdownRemark(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          template: { eq: \"post\" }\n          categories: { eq: \"Technical\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    highlights: allMarkdownRemark(\n      limit: 12\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 40, height: 40) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nexport const PageLayout = ({ children }) => {\n  return <main className=\"main-content page\">{children}</main>\n}\n","export const projectsList = [\n  {\n    name: 'taniarascia.com',\n    date: '2022',\n    slug: 'taniarascia.com',\n    tagline: 'The source of this website.',\n  },\n  {\n    name: 'Keyboard Accordion',\n    date: '2022',\n    slug: 'accordion',\n    tagline: 'Play the accordion with your keyboard!',\n    url: 'https://www.keyboardaccordion.com',\n    writeup: '/musical-instrument-web-audio-api',\n    highlight: true,\n  },\n  {\n    name: 'TakeNote',\n    date: '2020',\n    slug: 'takenote',\n    tagline: 'A free, open source notes app for the web.',\n    url: 'https://takenote.dev',\n    writeup: '/building-takenote',\n    highlight: true,\n  },\n  {\n    name: 'Chip8',\n    date: '2019',\n    slug: 'chip8',\n    tagline: 'A retro game emulator for three platforms.',\n    url: 'https://taniarascia.github.io/chip8',\n    writeup: '/writing-an-emulator-in-javascript-chip8',\n    highlight: true,\n  },\n  {\n    name: 'Sokoban',\n    date: '2021',\n    slug: 'sokoban',\n    tagline: 'A web-based Sokoban implementation.',\n    url: 'https://taniarascia.github.io/sokoban',\n    writeup: '/sokoban-game',\n    highlight: true,\n  },\n  {\n    name: 'New Moon',\n    date: '2015',\n    slug: 'new-moon',\n    tagline: 'The optimized dark theme for web development.',\n    url: 'https://taniarascia.github.io/new-moon',\n    highlight: true,\n  },\n  {\n    name: 'Laconia',\n    date: '2018',\n    slug: 'laconia',\n    tagline: 'An MVC framework from scratch in PHP.',\n  },\n  {\n    name: 'Primitive',\n    date: '2017',\n    slug: 'primitive',\n    tagline: 'A front-end design toolkit for responsive web apps.',\n    url: 'https://taniarascia.github.io/primitive',\n  },\n  {\n    name: 'Snek',\n    date: '2019',\n    slug: 'snek',\n    tagline: 'A terminal-based Snake implementation.',\n    writeup: '/snake-game-in-javascript',\n    highlight: true,\n  },\n  {\n    date: '2020',\n    name: 'webpack Boilerplate',\n    slug: 'webpack-boilerplate',\n    tagline: 'A sensible webpack 5 boilerplate.',\n  },\n  {\n    name: 'Chat App',\n    date: '2021',\n    slug: 'chat',\n    tagline: 'React/Redux, TypeScript, Socket.io chat app.',\n  },\n  {\n    name: 'React Advanced Form',\n    date: '2022',\n    slug: 'react-advanced-form',\n    tagline: 'An example of a schema-based form system for React.',\n  },\n]\n","import React, { useMemo } from 'react'\nimport { Link } from 'gatsby'\n\nimport { isNewPost, getFormattedDate } from '../utils/helpers'\n\nexport const Post = ({ node, prefix, newspaper }) => {\n  let formattedDate\n\n  if (node.date) {\n    if (!newspaper) {\n      formattedDate = getFormattedDate(node.date, 1)\n    } else {\n      formattedDate = getFormattedDate(node.date)\n    }\n  }\n\n  const newPost = useMemo(() => isNewPost(node.date), [node.date])\n\n  return (\n    <Link\n      to={prefix ? `/${prefix}${node.slug}` : node.slug}\n      key={node.id}\n      className=\"post\"\n    >\n      <p>{node.title}</p>\n      <time className={newPost ? 'new-post' : ''}>{formattedDate}</time>\n    </Link>\n  )\n}\n","import React, { useMemo } from 'react'\n\nimport { Post } from './Post'\n\nexport const Posts = ({\n  data = [],\n  showYears,\n  query,\n  prefix,\n  hideDate,\n  yearOnly,\n  ...props\n}) => {\n  const postsByYear = useMemo(() => {\n    const collection = {}\n\n    data.forEach((post) => {\n      const year = post.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), post]\n    })\n\n    return collection\n  }, [data])\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  if (showYears) {\n    return years.map((year) => (\n      <section className=\"year\">\n        <h2>{year}</h2>\n        <div className=\"posts\">\n          {postsByYear[year].map((node) => (\n            <Post key={node.id} node={node} query={query} prefix={prefix} />\n          ))}\n        </div>\n      </section>\n    ))\n  } else {\n    return (\n      <div className={props.newspaper ? 'posts newspaper' : 'posts'}>\n        {data.map((node) => (\n          <Post\n            key={node.id}\n            node={node}\n            query={query}\n            prefix={prefix}\n            hideDate={hideDate}\n            yearOnly={yearOnly}\n            {...props}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n"],"names":["Heading","_ref","title","buttonText","description","slug","props","React","className","Link","to","Index","data","latestNotes","edges","latestArticles","highlights","notes","useMemo","getSimplifiedPosts","articles","simplifiedHighlights","thumbnails","Helmet","config","siteTitle","SEO","PageLayout","Hero","type","src","floppy","alt","Posts","newspaper","map","post","key","thumbnail","Img","fixed","projectsList","filter","project","highlight","date","href","target","rel","name","tagline","writeup","url","Layout","children","Post","formattedDate","node","prefix","getFormattedDate","newPost","isNewPost","id","showYears","query","hideDate","yearOnly","postsByYear","collection","forEach","_post$date","year","split","concat","_toConsumableArray","years","Object","keys","reverse","assign"],"sourceRoot":""}