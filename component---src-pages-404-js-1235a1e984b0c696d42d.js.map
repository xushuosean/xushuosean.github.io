{"version":3,"file":"component---src-pages-404-js-1235a1e984b0c696d42d.js","mappings":"yLAKO,MAAMA,EAAMC,IAAyD,IACtEC,EACAC,EAEAC,GAJc,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,EAAO,kBAAEC,GAAmBP,EAGhEQ,EAAQC,EAAAA,EAAOC,SAGnB,GAAIJ,EAAS,CACX,MAAMK,EAAWP,EAASQ,YAC1BX,EAAQU,EAASV,MACjBC,EAAcE,EAASS,QAEnBF,EAASG,YACXN,EAAQG,EAASG,UAAUC,gBAAgBC,MAAMC,KAGnDd,EAAU,GAAGM,EAAAA,EAAOS,UAAUb,GAChC,MACEJ,EAAQQ,EAAAA,EAAOU,UACfjB,EAAcK,GAAqBE,EAAAA,EAAOP,YAG5CM,EAAQ,GAAGC,EAAAA,EAAOS,UAAUV,IAC5B,MAAMY,EAAkB,CACtB,CACE,WAAY,oBACZ,QAAS,UACTC,IAAKZ,EAAAA,EAAOS,QACZI,KAAMrB,EACNsB,cAAetB,IAoCnB,OAhCIK,GACFc,EAAgBI,KACd,CACE,WAAY,oBACZ,QAAS,iBACTC,gBAAiB,CACf,CACE,QAAS,WACTC,SAAU,EACVC,KAAM,CACJ,MAAOxB,EACPmB,KAAMrB,EACNO,YAKR,CACE,WAAY,oBACZ,QAAS,cACTa,IAAKZ,EAAAA,EAAOS,QACZI,KAAMrB,EACNsB,cAAetB,EACf2B,SAAU3B,EACVO,MAAO,CACL,QAAS,cACTa,IAAKb,GAEPN,gBAKJ2B,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,QAAMP,KAAK,cAAcS,QAAS7B,IAClC2B,EAAAA,cAAA,QAAMP,KAAK,QAAQS,QAASvB,IAE5BqB,EAAAA,cAAA,UAAQG,KAAK,uBACVC,KAAKC,UAAUd,IAGlBS,EAAAA,cAAA,QAAMM,SAAS,SAASJ,QAASzB,EAAUH,EAAUM,EAAAA,EAAOS,UAC3DZ,GAAWuB,EAAAA,cAAA,QAAMM,SAAS,UAAUJ,QAAQ,YAC7CF,EAAAA,cAAA,QAAMM,SAAS,WAAWJ,QAAS9B,IACnC4B,EAAAA,cAAA,QAAMM,SAAS,iBAAiBJ,QAAS7B,IACzC2B,EAAAA,cAAA,QAAMM,SAAS,WAAWJ,QAASvB,IAEnCqB,EAAAA,cAAA,QAAMP,KAAK,eAAeS,QAAQ,YAClCF,EAAAA,cAAA,QAAMP,KAAK,gBAAgBS,QAAS9B,IACpC4B,EAAAA,cAAA,QAAMP,KAAK,sBAAsBS,QAAS7B,IAC1C2B,EAAAA,cAAA,QAAMP,KAAK,gBAAgBS,QAASvB,IAC7B,C,oIChFE,SAAS4B,IACtB,OACEP,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAM,CAAC7B,MAAO,SAASQ,EAAAA,EAAOU,cAC/BU,EAAAA,cAAC9B,EAAAA,EAAG,MACJ8B,EAAAA,cAAA,OAAKQ,UAAU,aACbR,EAAAA,cAACS,EAAAA,EAAI,CAACrC,MAAM,MAAMC,YAAY,gBAItC,CAEAkC,EAAWG,OAASA,EAAAA,C","sources":["webpack://taniarascia.com/./src/components/SEO.js","webpack://taniarascia.com/./src/pages/404.js"],"sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport config from '../utils/config'\n\nexport const SEO = ({ postNode, postPath, postSEO, customDescription }) => {\n  let title\n  let description\n  let image = config.siteLogo\n  let postURL\n\n  if (postSEO) {\n    const postMeta = postNode.frontmatter\n    title = postMeta.title\n    description = postNode.excerpt\n\n    if (postMeta.thumbnail) {\n      image = postMeta.thumbnail.childImageSharp.fixed.src\n    }\n\n    postURL = `${config.siteUrl}${postPath}`\n  } else {\n    title = config.siteTitle\n    description = customDescription || config.description\n  }\n\n  image = `${config.siteUrl}${image}`\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: title,\n      alternateName: title,\n    },\n  ]\n\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: config.siteUrl,\n        name: title,\n        alternateName: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n      }\n    )\n  }\n  return (\n    <Helmet>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      <meta property=\"og:url\" content={postSEO ? postURL : config.siteUrl} />\n      {postSEO && <meta property=\"og:type\" content=\"article\" />}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  )\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Hero } from '../components/Hero'\nimport config from '../utils/config'\n\nexport default function FourOhFour() {\n  return (\n    <div>\n      <Helmet title={`404 | ${config.siteTitle}`} />\n      <SEO />\n      <div className=\"container\">\n        <Hero title=\"404\" description=\"Not found.\" />\n      </div>\n    </div>\n  )\n}\n\nFourOhFour.Layout = Layout\n"],"names":["SEO","_ref","title","description","postURL","postNode","postPath","postSEO","customDescription","image","config","siteLogo","postMeta","frontmatter","excerpt","thumbnail","childImageSharp","fixed","src","siteUrl","siteTitle","schemaOrgJSONLD","url","name","alternateName","push","itemListElement","position","item","headline","React","Helmet","content","type","JSON","stringify","property","FourOhFour","className","Hero","Layout"],"sourceRoot":""}