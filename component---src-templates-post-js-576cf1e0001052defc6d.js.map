{"version":3,"file":"component---src-templates-post-js-576cf1e0001052defc6d.js","mappings":"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","sources":["webpack://taniarascia.com/./src/components/PostSidebar.js","webpack://taniarascia.com/./src/utils/hooks/useActiveHash.js","webpack://taniarascia.com/./src/components/PostLayout.js","webpack://taniarascia.com/./src/components/Comments.js","webpack://taniarascia.com/./src/templates/post.js"],"sourcesContent":["import React, { useState, useLayoutEffect, useEffect } from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { useActiveHash } from '../utils/hooks/useActiveHash'\nimport { slugify } from '../utils/helpers'\n\nexport const PostSidebar = ({ thumbnail, toc, tags = [], date }) => {\n  const [tocLinks, setTocLinks] = useState([])\n\n  useLayoutEffect(() => {\n    const anchors = document.querySelectorAll(`.table-of-contents a`)\n    const ids = []\n    anchors.forEach((a) => {\n      ids.push(a.hash.replace('#', ''))\n    }, [])\n\n    setTocLinks(ids)\n  }, [toc])\n\n  const activeHash = useActiveHash(tocLinks)\n\n  useEffect(() => {\n    if (activeHash) {\n      const anchors = document.querySelectorAll('.table-of-contents a')\n      anchors.forEach((a) => {\n        a.classList.remove('active')\n      })\n      const activeLink = document.querySelector(\n        `.table-of-contents a[href$=\"${'#' + activeHash}\"]`\n      )\n\n      if (activeLink) {\n        activeLink.classList.add('active')\n      }\n    }\n  }, [activeHash])\n\n  return (\n    <aside className=\"post-sidebar\">\n      <div className=\"post-sidebar-content\">\n        {thumbnail && (\n          <div className=\"post-sidebar-thumbnail\">\n            <Img fixed={thumbnail?.childImageSharp?.fixed} />\n          </div>\n        )}\n\n        <section className=\"post-sidebar-section\">\n          <h2>Published</h2>\n          <div className=\"post-sidebar-offset\">\n            <p>{date}</p>\n            <p>\n              <a href=\"#comments\">View comments</a>\n            </p>\n          </div>\n        </section>\n\n        <section className=\"post-sidebar-section\">\n          <h2>Topics</h2>\n          <div className=\"post-sidebar-offset\">\n            <div className=\"tags\">\n              {tags.map((tag) => {\n                return (\n                  <Link\n                    key={tag}\n                    to={`/topics/${slugify(tag)}`}\n                    className=\"button small\"\n                    activeClassName=\"active\"\n                  >\n                    {tag}\n                  </Link>\n                )\n              })}\n            </div>\n          </div>\n        </section>\n\n        {toc && (\n          <section className=\"post-sidebar-section\">\n            <h2>In This Article</h2>\n            <nav\n              className=\"table-of-contents\"\n              dangerouslySetInnerHTML={{ __html: toc }}\n            />\n          </section>\n        )}\n      </div>\n    </aside>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nexport const useActiveHash = (itemIds) => {\n  const [activeHash, setActiveHash] = useState(``)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveHash(entry.target.id)\n          }\n        })\n      },\n      { rootMargin: `0% 0% -80% 0%` }\n    )\n\n    const elements = []\n\n    itemIds.forEach((id) => {\n      elements.push(document.getElementById(id))\n    })\n\n    elements.forEach((element) => {\n      observer.observe(element)\n    })\n\n    return () => {\n      elements.forEach((element) => {\n        observer.unobserve(element)\n      })\n    }\n  }, [itemIds])\n\n  return activeHash\n}\n","import React from 'react'\n\nimport { PostSidebar } from './PostSidebar'\n\nexport const PostLayout = ({ post, children }) => {\n  const { tags, date, thumbnail } = post.frontmatter\n\n  return (\n    <>\n      <main className=\"main-content\">{children}</main>\n      <PostSidebar\n        thumbnail={thumbnail}\n        date={date}\n        tags={tags}\n        toc={post.tableOfContents}\n      />\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport { appendComments } from '../utils/helpers'\n\nexport const Comments = () => {\n  useEffect(() => {\n    appendComments()\n  }, [])\n\n  return <div id=\"append-comments-here\" />\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { PostLayout } from '../components/PostLayout'\nimport { Comments } from '../components/Comments'\nimport { Hero } from '../components/Hero'\nimport config from '../utils/config'\n\nexport default function PostTemplate({ data }) {\n  const post = data.markdownRemark\n  const { title, comments_off, thumbnail } = post.frontmatter\n\n  return (\n    <>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n\n      <PostLayout post={post}>\n        {thumbnail && (\n          <Img\n            fixed={thumbnail?.childImageSharp?.fixed}\n            className=\"main-article-thumbnail\"\n          />\n        )}\n        <Hero title={title} type=\"post\" />\n\n        <div\n          className=\"main-article\"\n          id={post.fields.slug}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        {!comments_off && (\n          <section id=\"comments\" className=\"comments\">\n            <h3>Comments</h3>\n            <Comments />\n          </section>\n        )}\n      </PostLayout>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      tableOfContents\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        categories\n        description\n        comments_off\n        thumbnail {\n          childImageSharp {\n            fixed(width: 75, height: 75) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostSidebar","_ref","_thumbnail$childImage","thumbnail","toc","tags","date","tocLinks","setTocLinks","useState","useLayoutEffect","anchors","document","querySelectorAll","ids","forEach","a","push","hash","replace","activeHash","itemIds","setActiveHash","useEffect","observer","IntersectionObserver","entries","entry","isIntersecting","target","id","rootMargin","elements","getElementById","element","observe","unobserve","useActiveHash","classList","remove","activeLink","querySelector","add","React","className","Img","fixed","childImageSharp","href","map","tag","Link","key","to","slugify","activeClassName","dangerouslySetInnerHTML","__html","PostLayout","post","children","frontmatter","tableOfContents","Comments","appendComments","PostTemplate","data","markdownRemark","title","comments_off","Helmet","config","siteTitle","SEO","postPath","fields","slug","postNode","postSEO","Hero","type","html","Layout"],"sourceRoot":""}