{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/mxgraph-resizer/",
    "result": {"data":{"markdownRemark":{"html":"<p>这篇文章的主题是如何自定义 mxGraph 图元的 sizer 的显示与隐藏。</p>\n<p>显示与隐藏分两种情况，一种是在首次渲染时，就按照规则显示/隐藏 sizer，一种是更新时，让 sizer 的显示/隐藏状态发生变化。下面依次分析。</p>\n<p>显示/隐藏 sizer 首先要搞明白 sizer 是什么。sizer 本质上还是 shape，继承自 mxShape，所以按照 shape 的显示与隐藏就可以完成 sizer 的显示与隐藏。</p>\n<p>那接下来我们看看 mxGraph 自己是如何完成这个功能的。</p>\n<h3 id=\"代码分析\" style=\"position:relative;\"><a href=\"#%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90\" aria-label=\"代码分析 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码分析</h3>\n<p>sizer 用来控制 shape 缩放，这里以块图元为例。</p>\n<p>我们要知道这些东西（图元的缩放）都存在于 vertexHandler 中。所以我们从 vertexHanlder 的方法中，可以看到进行了初始化，调用了 init 方法。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mxVertexHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>state <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ......</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>每一个图元，都对应一个 vertexHandler。每次 new vertexHanlder 时，都会执行 init 方法，此时 sizer 就已经被创建出来了。</p>\n<p>在 init 方法中，有这么一段代码是用来创建 sizer 的</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resizable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>singleSizer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nw-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ne-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'w-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sw-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'se-resize'</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里创建了 8 个 sizer，分别是图元的左上，上，右上，左，右，左下 ，下，右下（如下图所示）</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3f80890079d3401e8158000e22e7f141~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=406&#x26;h=222&#x26;s=12242&#x26;e=png&#x26;b=fdfdfd\" alt=\"\"></p>\n<blockquote>\n<p>它们之间的顺序是从左到右，从上到下，index 从 0-7。</p>\n</blockquote>\n<p>来看看 createSizer 的实现是什么样的，屏蔽掉一些这里不需要理解的代码。只看对我们有用的信息</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">mxVertexHandler<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cursor<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> fillColor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  size <span class=\"token operator\">=</span> size <span class=\"token operator\">||</span> mxConstants<span class=\"token punctuation\">.</span><span class=\"token constant\">HANDLE_SIZE</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> bounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mxRectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> sizer <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSizerShape</span><span class=\"token punctuation\">(</span>bounds<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> fillColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// ......</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isSizerVisible</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sizer<span class=\"token punctuation\">.</span>visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> sizer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>看这里，sizer 实际上是一个 shape，被创建出来后，当达成某个条件后，sizer 的 visible 会被设置为 false。一旦 shape 的 visible 被设置为 false 以后，这个 shape 就不会再被渲染了</p>\n<blockquote>\n<p>visible 控制 shape 渲染的逻辑可以参见 mxShape.redraw 方法</p>\n</blockquote>\n<p>进入 isSizerVisible 方法可以看到 mxGraph 默认只返回了 true，入参为 index。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mxVertexHandler.prototype.isSizerVisible = function (index) {\n  return true;\n};</code></pre></div>\n<h3 id=\"实现功能\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E7%8E%B0%E5%8A%9F%E8%83%BD\" aria-label=\"实现功能 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现功能</h3>\n<h4 id=\"首次渲染\" style=\"position:relative;\"><a href=\"#%E9%A6%96%E6%AC%A1%E6%B8%B2%E6%9F%93\" aria-label=\"首次渲染 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>首次渲染</h4>\n<p>我们可以按照 index 返回 false 或者 true，以达成自定义渲染 sizer 的目的。如果还需要根据图元本身做判断，那么 this 上挂载了 state，可以拿到 state 后，完成自定义渲染 sizer 的目的。</p>\n<p>比如我们将上下左右的四个 sizer 移除，可以重写 isSizerVisible 方法。如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">mxVertexHandler<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">isSizerVisible</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dc57dced99144e9a9e14e70b3ae096e6~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=412&#x26;h=242&#x26;s=11494&#x26;e=png&#x26;b=fefefe\" alt=\"\"></p>\n<h4 id=\"指定sizer进行显示隐藏\" style=\"position:relative;\"><a href=\"#%E6%8C%87%E5%AE%9Asizer%E8%BF%9B%E8%A1%8C%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F\" aria-label=\"指定sizer进行显示隐藏 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>指定sizer进行显示/隐藏</h4>\n<p>mxGraph本身只提供了一个方法<code class=\"language-text\">setHandlesVisible</code>来显示和隐藏所有的handle，这里的handle是sizer的父级，sizer本身也是handle的一种，只不过是拿来控制图元大小的一种handle，名字叫做sizer。</p>\n<p>我们看一下<code class=\"language-text\">setHandlesVisible</code>方法是如何实现的吧</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">mxVertexHandler<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setHandlesVisible</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">visible</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handlesVisible <span class=\"token operator\">=</span> visible<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>visible<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ......</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>依旧是省略掉一部分代码。这里直接控制了dom上的样式，对sizer对应的dom元素的display样式进行了控制，所以如果想要实现只显示一部分的代码，可以自己写一个方法。但在此之前我们要搞明白handler的调用路径。</p>\n<p>当我们点击一个图元时，<code class=\"language-text\">selectionModel</code>会发生变化，继而引起<code class=\"language-text\">selectionCellsHandler</code>中刷新handlers，所以在<code class=\"language-text\">selectionCellsHandler</code>中存储了所有已被创建的handler。在这里我们可以拿到，我们想操作的cell对应的handler。继而就可以完成对指定sizer（handle）的显示隐藏。</p>\n<p>获取handler的方法我们可以在<code class=\"language-text\">selectionCellsHandler</code>中找到，即<code class=\"language-text\">getHandler</code></p>\n<p>理论可行，开始写代码</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hideSizerByIndex</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">graph<span class=\"token punctuation\">,</span> cell<span class=\"token punctuation\">,</span> visible<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>selectionCellsHandler<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    handler<span class=\"token punctuation\">.</span>sizers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>visible<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这样就完成了指定sizer进行显示/隐藏</p>\n<p>至此，就可以自定义 sizer 的显示与隐藏了</p>\n<blockquote>\n<p>后续将会写更多与mxGraph相关的文章，敬请期待。</p>\n</blockquote>","excerpt":"这篇文章的主题是如何自定义 mxGraph 图元的 sizer 的显示与隐藏。 显示与隐藏分两种情况，一种是在首次渲染时，就按照规则显示/隐藏 sizer，一种是更新时，让 sizer 的显示/隐藏状态发生变化。下面依次分析。 显示/隐藏 sizer 首先要搞明白 sizer…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90\">代码分析</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AE%9E%E7%8E%B0%E5%8A%9F%E8%83%BD\">实现功能</a></p>\n<ul>\n<li><a href=\"#%E9%A6%96%E6%AC%A1%E6%B8%B2%E6%9F%93\">首次渲染</a></li>\n<li><a href=\"#%E6%8C%87%E5%AE%9Asizer%E8%BF%9B%E8%A1%8C%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F\">指定sizer进行显示/隐藏</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/mxgraph-resizer/"},"frontmatter":{"title":"mxgraph resizer","date":"December 24, 2024","tags":["mxgraph"],"categories":["Technical"],"description":"关于mxgraph resizer的使用","comments_off":false,"thumbnail":null}}},"pageContext":{"slug":"/mxgraph-resizer/","previous":{"id":"26647e8f-6ce9-55f6-9870-4e46ae14973b","frontmatter":{"title":"this is title","tags":["ba","te"],"categories":["Technical"],"template":"post"},"fields":{"slug":"/my-first-post/"}},"next":null}},
    "staticQueryHashes": []}