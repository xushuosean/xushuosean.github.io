{"version":3,"file":"component---src-pages-illustration-js-0a171179aa276cffa8b3.js","mappings":"6OASA,MAAMA,EAAS,CACb,CAAEC,IAAK,yBAA0BC,MAAO,WACxC,CAAED,IAAK,4BAA6BC,MAAO,gBAC3C,CAAED,IAAK,4BAA6BC,MAAO,oBAC3C,CAAED,IAAK,+BAAgCC,MAAO,aAC9C,CAAED,IAAK,8BAA+BC,MAAO,aAC7C,CAAED,IAAK,8BAA+BC,MAAO,YAC7C,CAAED,IAAK,+BAAgCC,MAAO,aAC9C,CAAED,IAAK,+BAAgCC,MAAO,aAC9C,CAAED,IAAK,4BAA6BC,MAAO,UAC3C,CAAED,IAAK,+BAAgCC,MAAO,cAGjC,SAASC,IAGtB,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,CAACH,MAAO,SAAcI,EAAAA,EAAOC,cACpCH,EAAAA,cAACI,EAAAA,EAAG,MAEJJ,EAAAA,cAACK,EAAAA,EAAU,KACTL,EAAAA,cAACM,EAAAA,EAAI,CACHR,MATM,MAUNS,YAAY,uDAGdP,EAAAA,cAAA,OAAKQ,UAAU,SACZZ,EAAOa,KAAKC,GAETV,EAAAA,cAAA,OAAKQ,UAAU,OAAOG,IAAKD,EAAMb,KAC/BG,EAAAA,cAAA,KAAGY,KAAMF,EAAMb,IAAKgB,OAAO,SAASC,IAAI,cACtCd,EAAAA,cAAA,WAAMU,EAAMZ,OAEZE,EAAAA,cAAA,OACEQ,UAAU,kBACVO,MAAO,CAAEC,gBAAiB,QAAQN,EAAMb,SACxCoB,IAAKP,EAAMZ,cAU/B,CAEAC,EAAamB,OAASA,EAAAA,C,yFCrDf,MAAMd,EAAMe,IAAyD,IACtErB,EACAS,EAEAa,GAJc,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,EAAO,kBAAEC,GAAmBL,EAGhET,EAAQR,EAAAA,EAAOuB,SAGnB,GAAIF,EAAS,CACX,MAAMG,EAAWL,EAASM,YAC1B7B,EAAQ4B,EAAS5B,MACjBS,EAAcc,EAASO,QAEnBF,EAASG,YACXnB,EAAQgB,EAASG,UAAUC,gBAAgBC,MAAMC,KAGnDZ,EAAU,GAAGlB,EAAAA,EAAO+B,UAAUX,GAChC,MACExB,EAAQI,EAAAA,EAAOC,UACfI,EAAciB,GAAqBtB,EAAAA,EAAOK,YAG5CG,EAAQ,GAAGR,EAAAA,EAAO+B,UAAUvB,IAC5B,MAAMwB,EAAkB,CACtB,CACE,WAAY,oBACZ,QAAS,UACTrC,IAAKK,EAAAA,EAAO+B,QACZE,KAAMrC,EACNsC,cAAetC,IAoCnB,OAhCIyB,GACFW,EAAgBG,KACd,CACE,WAAY,oBACZ,QAAS,iBACTC,gBAAiB,CACf,CACE,QAAS,WACTC,SAAU,EACVC,KAAM,CACJ,MAAOpB,EACPe,KAAMrC,EACNY,YAKR,CACE,WAAY,oBACZ,QAAS,cACTb,IAAKK,EAAAA,EAAO+B,QACZE,KAAMrC,EACNsC,cAAetC,EACf2C,SAAU3C,EACVY,MAAO,CACL,QAAS,cACTb,IAAKa,GAEPH,gBAKJP,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,QAAMmC,KAAK,cAAcO,QAASnC,IAClCP,EAAAA,cAAA,QAAMmC,KAAK,QAAQO,QAAShC,IAE5BV,EAAAA,cAAA,UAAQ2C,KAAK,uBACVC,KAAKC,UAAUX,IAGlBlC,EAAAA,cAAA,QAAM8C,SAAS,SAASJ,QAASnB,EAAUH,EAAUlB,EAAAA,EAAO+B,UAC3DV,GAAWvB,EAAAA,cAAA,QAAM8C,SAAS,UAAUJ,QAAQ,YAC7C1C,EAAAA,cAAA,QAAM8C,SAAS,WAAWJ,QAAS5C,IACnCE,EAAAA,cAAA,QAAM8C,SAAS,iBAAiBJ,QAASnC,IACzCP,EAAAA,cAAA,QAAM8C,SAAS,WAAWJ,QAAShC,IAEnCV,EAAAA,cAAA,QAAMmC,KAAK,eAAeO,QAAQ,YAClC1C,EAAAA,cAAA,QAAMmC,KAAK,gBAAgBO,QAAS5C,IACpCE,EAAAA,cAAA,QAAMmC,KAAK,sBAAsBO,QAASnC,IAC1CP,EAAAA,cAAA,QAAMmC,KAAK,gBAAgBO,QAAShC,IAC7B,C,qECtFN,MAAML,EAAac,IAAmB,IAAlB,SAAE4B,GAAU5B,EACrC,OAAOnB,EAAAA,cAAA,QAAMQ,UAAU,qBAAqBuC,EAAgB,C","sources":["webpack://taniarascia.com/./src/pages/illustration.js","webpack://taniarascia.com/./src/components/SEO.js","webpack://taniarascia.com/./src/components/PageLayout.js"],"sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Hero } from '../components/Hero'\nimport { PageLayout } from '../components/PageLayout'\nimport config from '../utils/config'\n\nconst images = [\n  { url: '/illustrations/Ram.png', title: 'RAM Ram' },\n  { url: '/illustrations/Kohaku.png', title: 'Kohaku River' },\n  { url: '/illustrations/Slurms.png', title: 'Slurms MacKenzie' },\n  { url: '/illustrations/Charizard.png', title: 'Charizard' },\n  { url: '/illustrations/MechaRam.png', title: 'Mecha Ram' },\n  { url: '/illustrations/Squirtle.png', title: 'Squirtle' },\n  { url: '/illustrations/Wartortle.png', title: 'Wartortle' },\n  { url: '/illustrations/Blastoise.png', title: 'Blastoise' },\n  { url: '/illustrations/Oddish.png', title: 'Oddish' },\n  { url: '/illustrations/Bulbasaur.png', title: 'Bulbasaur' },\n]\n\nexport default function Illustration() {\n  const title = 'Art'\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO />\n\n      <PageLayout>\n        <Hero\n          title={title}\n          description=\"I don't draw much, but here's a few illustrations.\"\n        />\n\n        <div className=\"cards\">\n          {images.map((image) => {\n            return (\n              <div className=\"card\" key={image.url}>\n                <a href={image.url} target=\"_blank\" rel=\"noreferrer\">\n                  <div>{image.title}</div>\n\n                  <div\n                    className=\"image-thumbnail\"\n                    style={{ backgroundImage: `url('${image.url}')` }}\n                    alt={image.title}\n                  />\n                </a>\n              </div>\n            )\n          })}\n        </div>\n      </PageLayout>\n    </>\n  )\n}\n\nIllustration.Layout = Layout\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport config from '../utils/config'\n\nexport const SEO = ({ postNode, postPath, postSEO, customDescription }) => {\n  let title\n  let description\n  let image = config.siteLogo\n  let postURL\n\n  if (postSEO) {\n    const postMeta = postNode.frontmatter\n    title = postMeta.title\n    description = postNode.excerpt\n\n    if (postMeta.thumbnail) {\n      image = postMeta.thumbnail.childImageSharp.fixed.src\n    }\n\n    postURL = `${config.siteUrl}${postPath}`\n  } else {\n    title = config.siteTitle\n    description = customDescription || config.description\n  }\n\n  image = `${config.siteUrl}${image}`\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: title,\n      alternateName: title,\n    },\n  ]\n\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: config.siteUrl,\n        name: title,\n        alternateName: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n      }\n    )\n  }\n  return (\n    <Helmet>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      <meta property=\"og:url\" content={postSEO ? postURL : config.siteUrl} />\n      {postSEO && <meta property=\"og:type\" content=\"article\" />}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  )\n}\n","import React from 'react'\n\nexport const PageLayout = ({ children }) => {\n  return <main className=\"main-content page\">{children}</main>\n}\n"],"names":["images","url","title","Illustration","React","Helmet","config","siteTitle","SEO","PageLayout","Hero","description","className","map","image","key","href","target","rel","style","backgroundImage","alt","Layout","_ref","postURL","postNode","postPath","postSEO","customDescription","siteLogo","postMeta","frontmatter","excerpt","thumbnail","childImageSharp","fixed","src","siteUrl","schemaOrgJSONLD","name","alternateName","push","itemListElement","position","item","headline","content","type","JSON","stringify","property","children"],"sourceRoot":""}