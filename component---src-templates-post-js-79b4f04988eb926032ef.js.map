{"version":3,"file":"component---src-templates-post-js-79b4f04988eb926032ef.js","mappings":"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","sources":["webpack://taniarascia.com/./src/utils/hooks/useActiveHash.js","webpack://taniarascia.com/./src/components/PostSidebar.js","webpack://taniarascia.com/./src/components/PostLayout.js","webpack://taniarascia.com/./src/templates/post.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const useActiveHash = (itemIds) => {\n  const [activeHash, setActiveHash] = useState(``)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveHash(encodeURI(entry.target.id))\n          }\n        })\n      },\n      { rootMargin: `0% 0% -80% 0%` }\n    )\n\n    const elements = []\n\n    itemIds.forEach((id) => {\n      const cnId = decodeURI(id);\n      if (document.getElementById(cnId))\n        elements.push(document.getElementById(cnId))\n    })\n\n    elements.forEach((element) => {\n      observer.observe(element)\n    })\n\n    return () => {\n      elements.forEach((element) => {\n        observer.unobserve(element)\n      })\n    }\n  }, [itemIds])\n\n  return activeHash\n}\n","import { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\n\nimport { slugify } from '../utils/helpers'\nimport { useActiveHash } from '../utils/hooks/useActiveHash'\n\nexport const PostSidebar = ({ thumbnail, toc, tags = [], date }) => {\n  const [tocLinks, setTocLinks] = useState([])\n\n  useLayoutEffect(() => {\n    const anchors = document.querySelectorAll(`.table-of-contents a`)\n    const ids = []\n    anchors.forEach((a) => {\n      ids.push(a.hash.replace('#', ''))\n    }, [])\n\n    console.log(ids, 'hereids', anchors)\n\n    setTocLinks(ids)\n  }, [toc])\n\n  const activeHash = useActiveHash(tocLinks)\n\n  useEffect(() => {\n    if (activeHash) {\n      const anchors = document.querySelectorAll('.table-of-contents a')\n      anchors.forEach((a) => {\n        a.classList.remove('active')\n      })\n      const activeLink = document.querySelector(\n        `.table-of-contents a[href$=\"${'#' + activeHash}\"]`\n      )\n\n      if (activeLink) {\n        activeLink.classList.add('active')\n      }\n    }\n  }, [activeHash])\n\n  return (\n    <aside className=\"post-sidebar\">\n      <div className=\"post-sidebar-content\">\n        {thumbnail && (\n          <div className=\"post-sidebar-thumbnail\">\n            <Img fixed={thumbnail?.childImageSharp?.fixed} />\n          </div>\n        )}\n\n        <section className=\"post-sidebar-section\">\n          <h2>Published</h2>\n          <div className=\"post-sidebar-offset\">\n            <p>{date}</p>\n            <p>\n              <a href=\"#comments\">View comments</a>\n            </p>\n          </div>\n        </section>\n\n        <section className=\"post-sidebar-section\">\n          <h2>Topics</h2>\n          <div className=\"post-sidebar-offset\">\n            <div className=\"tags\">\n              {tags.map((tag) => {\n                return (\n                  <Link\n                    key={tag}\n                    to={`/topics/${slugify(tag)}`}\n                    className=\"button small\"\n                    activeClassName=\"active\"\n                  >\n                    {tag}\n                  </Link>\n                )\n              })}\n            </div>\n          </div>\n        </section>\n\n        {toc && (\n          <section className=\"post-sidebar-section\">\n            <h2>In This Article</h2>\n            <nav\n              className=\"table-of-contents\"\n              dangerouslySetInnerHTML={{ __html: toc }}\n            />\n          </section>\n        )}\n      </div>\n    </aside>\n  )\n}\n","import React from 'react'\n\nimport { PostSidebar } from './PostSidebar'\n\nexport const PostLayout = ({ post, children }) => {\n  const { tags, date, thumbnail } = post.frontmatter\n\n  return (\n    <>\n      <main className=\"main-content\">{children}</main>\n      <PostSidebar\n        thumbnail={thumbnail}\n        date={date}\n        tags={tags}\n        toc={post.tableOfContents}\n      />\n    </>\n  )\n}\n","import { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport { Hero } from '../components/Hero'\nimport { Layout } from '../components/Layout'\nimport { PostLayout } from '../components/PostLayout'\nimport { SEO } from '../components/SEO'\nimport config from '../utils/config'\n\nexport default function PostTemplate({ data }) {\n  const post = data.markdownRemark\n  const { title, comments_off, thumbnail } = post.frontmatter\n\n  return (\n    <>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n\n      <PostLayout post={post}>\n        {thumbnail && (\n          <Img\n            fixed={thumbnail?.childImageSharp?.fixed}\n            className=\"main-article-thumbnail\"\n          />\n        )}\n        <Hero title={title} type=\"post\" />\n\n        <div\n          className=\"main-article\"\n          id={post.fields.slug}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        {!comments_off && (\n          <section id=\"comments\" className=\"comments\">\n            <h3>Comments</h3>\n            {/* <Comments /> */}\n          </section>\n        )}\n      </PostLayout>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      tableOfContents\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        categories\n        description\n        comments_off\n        thumbnail {\n          childImageSharp {\n            fixed(width: 75, height: 75) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostSidebar","_ref","_thumbnail$childImage","thumbnail","toc","tags","date","tocLinks","setTocLinks","useState","useLayoutEffect","anchors","document","querySelectorAll","ids","forEach","a","push","hash","replace","console","log","activeHash","itemIds","setActiveHash","useEffect","observer","IntersectionObserver","entries","entry","isIntersecting","encodeURI","target","id","rootMargin","elements","cnId","decodeURI","getElementById","element","observe","unobserve","useActiveHash","classList","remove","activeLink","querySelector","add","React","className","Img","fixed","childImageSharp","href","map","tag","Link","key","to","slugify","activeClassName","dangerouslySetInnerHTML","__html","PostLayout","post","children","frontmatter","tableOfContents","PostTemplate","data","markdownRemark","title","comments_off","Helmet","config","siteTitle","SEO","postPath","fields","slug","postNode","postSEO","Hero","type","html","Layout"],"sourceRoot":""}